#!/usr/bin/env bash
set -euo pipefail

echo "⏰ Checking LSP binary build version..."

dir_url="https://raw.githubusercontent.com/textwire/lsp/refs/heads/master/bin"
external_build_version=$(curl -s "$dir_url/build-version")
local_build_version=$(cat ./bin/build-version)

if [[ "$external_build_version" == "$local_build_version" ]]; then
    echo "✅ The LSP binaries are up-to-date"
    exit 1
fi

file_names=(
    "textwire_lsp_darwin_amd64"
    "textwire_lsp_darwin_arm64"
    "textwire_lsp_linux_amd64"
    "textwire_lsp_windows_amd64.exe"
)

echo "⏰ Downloading LSP binaries..."

for file_name in "${file_names[@]}"; do
    url="$dir_url/$file_name"
    dest="bin/$file_name"

    # Check if the file exists
    http_code=$(curl -s -o /dev/null -w "%{http_code}" "$url")

    if [[ "$http_code" -ne 200 ]]; then
        echo "⚠️ File $url doesn't exists. Skipping..."
        continue
    fi

    # Download a file with curl
    curl -o "$dest" "$url" > /dev/null 2>&1

    # Make the file executable
    chmod +x "$dest"

    echo "✅ Downloaded $file_name"
done


# Update build version locally
echo "$external_build_version" > bin/build-version

echo "✅ All LSP binaries are downloaded and updated"
